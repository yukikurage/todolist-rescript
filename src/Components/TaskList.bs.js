// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var React = require("react");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Caml_array = require("rescript/lib/js/caml_array.js");

function TaskList(Props) {
  var match = React.useState(function () {
        return [];
      });
  var setTasks = match[1];
  var tasks = match[0];
  var match$1 = React.useState(function () {
        return "";
      });
  var setTaskName = match$1[1];
  var taskName = match$1[0];
  var handleTaskName = function ($$event) {
    var value = $$event.currentTarget.value;
    return Curry._1(setTaskName, (function (param) {
                  return value;
                }));
  };
  var addTask = function ($$event) {
    $$event.preventDefault();
    tasks.push({
          name: taskName,
          isFinished: false
        });
    return Curry._1(setTaskName, (function (param) {
                  return "";
                }));
  };
  var rendTask = function (i, task) {
    return React.createElement("li", {
                key: String(i)
              }, React.createElement("span", {
                    className: task.isFinished ? "finishedTask" : "unfinishedTask"
                  }, task.name), task.isFinished ? null : React.createElement("button", {
                      onClick: (function (param) {
                          param.preventDefault();
                          var init = Caml_array.get(tasks, i);
                          Caml_array.set(tasks, i, {
                                name: init.name,
                                isFinished: true
                              });
                          return Curry._1(setTasks, (function (param) {
                                        return tasks.slice(0);
                                      }));
                        })
                    }, "完了"));
  };
  var rendTasks = React.createElement("ul", undefined, Belt_Array.mapWithIndex(tasks, rendTask));
  var rendNewTaskInput = React.createElement("div", undefined, "タスク名", React.createElement("input", {
            value: taskName,
            onChange: handleTaskName
          }), React.createElement("button", {
            onClick: addTask
          }, "追加"));
  return React.createElement("div", undefined, React.createElement("div", undefined, "タスク一覧"), rendTasks, rendNewTaskInput);
}

var make = TaskList;

exports.make = make;
/* react Not a pure module */
